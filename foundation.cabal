Name:                foundation
Version:             0.0
Synopsis:            Alternative prelude with batteries and no dependencies
Description:
    A custom prelude with no dependencies apart from base.
    .
    This package has the following goals:
    .
    * provide a base like sets of modules that provide a consistent set of features and bugfixes across multiple versions of GHC (unlike base).
    .
    * provide a better and more efficient prelude than base's prelude.
    .
    * be self-sufficient: no external dependencies apart from base.
    .
    * provide better data-types: packed unicode string by default, arrays.
    .
    * Better numerical classes that better represent mathematical thing (No more all-in-one Num).
    .
    * Better I/O system with less Lazy IO
    .
    * Usual partial functions distinguished through type system
License:             BSD3
License-file:        LICENSE
Copyright:           Vincent Hanquez <vincent@snarc.org>
Author:              Vincent Hanquez <vincent@snarc.org>
Maintainer:          vincent@snarc.org
Category:            foundation
Stability:           experimental
Build-Type:          Simple
Homepage:            https://github.com/vincenthz/hs-foundation
Bug-Reports:         https://github.com/vincenthz/hs-foundation/issues
Cabal-Version:       >=1.10
tested-with:         GHC == 7.4.2, GHC == 7.6.3, GHC == 7.8.4, GHC == 7.10.3, GHC == 8.0.1
extra-source-files:  README.md

source-repository head
  type: git
  location: https://github.com/vincenthz/hs-foundation

Library
  Exposed-modules:   Core
                     Core.Number
                     Core.Array
                     Core.Array.Internal
                     Core.Convertible
                     Core.String
                     Core.String.IO
                     Core.IO
                     Core.VFS
                     Core.VFS.Path
                     Core.VFS.FilePath
                     Core.VFS.URI
                     Core.Foreign
                     Core.Collection
                     Core.Primitive
                     Core.System.Info
                     Core.Strict
                     -- Core.View
  Other-modules:     Core.String.Internal
                     Core.String.UTF8
                     Core.String.UTF8Table
                     Core.Tuple
                     Core.Collection.List
                     Core.Collection.Element
                     Core.Collection.InnerFunctor
                     Core.Collection.Sequential
                     Core.Collection.Keyed
                     Core.Collection.Indexed
                     Core.Collection.Foldable
                     Core.Collection.Mutable
                     Core.Internal.Base
                     Core.Internal.Primitive
                     Core.Internal.IsList
                     Core.Internal.Identity
                     Core.Internal.Proxy
                     Core.Internal.Types
                     Core.Internal.PrimTypes
                     Core.Internal.MonadTrans
                     Core.Primitive.Types
                     Core.Primitive.Monad
                     Core.Primitive.Utils
                     Core.Primitive.FinalPtr
                     Core.Array.Common
                     Core.Array.Unboxed
                     Core.Array.Unboxed.Builder
                     Core.Array.Unboxed.Mutable
                     Core.Array.Unboxed.ByteArray
                     Core.Array.Boxed
                     Core.Foreign.MemoryMap
                     Core.Foreign.MemoryMap.Types
                     Core.Partial
  if os(windows)
    Other-modules:   Core.Foreign.MemoryMap.Windows
  else
    Other-modules:   Core.Foreign.MemoryMap.Posix
  Default-Extensions: NoImplicitPrelude
                      TypeFamilies
                      BangPatterns
                      DeriveDataTypeable
  Build-depends:     base >= 4 && < 5
                   , ghc-prim
  -- FIXME add suport for armel mipsel
  --  CPP-options: -DARCH_IS_LITTLE_ENDIAN
  -- FIXME add support for powerpc powerpc64 armeb mipseb
  --  CPP-options: -DARCH_IS_BIG_ENDIAN
  if (arch(i386) || arch(x86_64))
    CPP-options: -DARCH_IS_LITTLE_ENDIAN
  else
    CPP-options: -DARCH_IS_UNKNOWN_ENDIAN
  if os(windows)
    Build-depends:    Win32
  ghc-options:       -Wall -fwarn-tabs
  default-language:  Haskell2010

Test-Suite test-foundation
  type:              exitcode-stdio-1.0
  hs-source-dirs:    tests
  Main-is:           Tests.hs
  Other-modules:     ForeignUtils
  Build-Depends:     base >= 3 && < 5
                   , mtl
                   , QuickCheck
                   , tasty
                   , tasty-quickcheck
                   , tasty-hunit
                   , foundation
  ghc-options:       -Wall -fno-warn-orphans -fno-warn-missing-signatures
  default-language:  Haskell2010

Benchmark bench-array
  Main-Is:           Array.hs
  hs-source-dirs:    benchs
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0
  Default-Extensions: NoImplicitPrelude
                      BangPatterns
  Build-depends:     base >= 4, criterion, foundation

Benchmark bench-profile-break
  Main-Is:           ProfBreak.hs
  hs-source-dirs:    benchs
  default-language:  Haskell2010
  type:              exitcode-stdio-1.0
  Default-Extensions: NoImplicitPrelude
                      BangPatterns
  Build-depends:     foundation
